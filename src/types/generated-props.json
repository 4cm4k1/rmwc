{
  "npm": {},
  "typescript": {
    "WithRippleProps": {
      "fileName": "src/types/index.tsx",
      "flags": {
        "isExported": true,
        "isExternal": false,
        "isOptional": false,
        "isPrivate": false,
        "isProtected": false,
        "isPublic": false,
        "isRest": false,
        "isStatic": false
      },
      "kind": "interface",
      "name": "WithRippleProps",
      "methods": [],
      "properties": [
        {
          "documentation": {
            "contents": [
              "<p>Adds a ripple effect to the component</p>\n"
            ],
            "contentsRaw": "Adds a ripple effect to the component",
            "metadata": {}
          },
          "fileName": "src/types/index.tsx",
          "flags": {
            "isExported": true,
            "isExternal": false,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "ripple",
          "type": "RipplePropT"
        }
      ]
    },
    "IconOptions": {
      "fileName": "src/types/index.tsx",
      "flags": {
        "isExported": true,
        "isExternal": false,
        "isOptional": false,
        "isPrivate": false,
        "isProtected": false,
        "isPublic": false,
        "isRest": false,
        "isStatic": false
      },
      "kind": "interface",
      "name": "IconOptions",
      "indexSignature": {
        "documentation": {
          "contents": [
            "<p>Additional props</p>\n"
          ],
          "contentsRaw": "Additional props",
          "metadata": {}
        },
        "fileName": "src/types/index.tsx",
        "kind": "signature",
        "name": "__index",
        "parameters": [
          {
            "flags": {
              "isExported": false,
              "isExternal": false,
              "isOptional": false,
              "isPrivate": false,
              "isProtected": false,
              "isPublic": false,
              "isRest": false,
              "isStatic": false
            },
            "kind": "parameter",
            "name": "key",
            "type": "string"
          }
        ],
        "returnType": "any",
        "type": "{ [key: string]: any }"
      },
      "methods": [],
      "properties": [
        {
          "documentation": {
            "contents": [
              "<p>A base className for the icon namespace, i.e. material-icons.</p>\n"
            ],
            "contentsRaw": "A base className for the icon namespace, i.e. material-icons.",
            "metadata": {}
          },
          "fileName": "src/types/index.tsx",
          "flags": {
            "isExported": true,
            "isExternal": false,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "basename",
          "type": "undefined | string"
        },
        {
          "fileName": "src/types/index.tsx",
          "flags": {
            "isExported": true,
            "isExternal": false,
            "isOptional": false,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "icon",
          "type": "IconElementT"
        },
        {
          "documentation": {
            "contents": [
              "<p>A className prefix to use when using css font icons that use prefixes,\ni.e. font-awesome-, ion-, glyphicons-.\nThis only applies when using the &#39;className&#39; strategy.</p>\n"
            ],
            "contentsRaw": "A className prefix to use when using css font icons that use prefixes,\ni.e. font-awesome-, ion-, glyphicons-.\nThis only applies when using the 'className' strategy.",
            "metadata": {}
          },
          "fileName": "src/types/index.tsx",
          "flags": {
            "isExported": true,
            "isExternal": false,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "prefix",
          "type": "undefined | string"
        },
        {
          "documentation": {
            "contents": [
              "<p>A render function to use when using the &#39;custom&#39; strategy.</p>\n"
            ],
            "contentsRaw": "A render function to use when using the 'custom' strategy.",
            "metadata": {}
          },
          "fileName": "src/types/index.tsx",
          "flags": {
            "isExported": true,
            "isExternal": false,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "render",
          "type": "undefined | (props: ) => Exclude<React.ReactNode, React.ReactText>"
        },
        {
          "documentation": {
            "contents": [
              "<p>A size to render the icon</p>\n"
            ],
            "contentsRaw": "A size to render the icon",
            "metadata": {}
          },
          "fileName": "src/types/index.tsx",
          "flags": {
            "isExported": true,
            "isExternal": false,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "size",
          "type": "IconSizeT"
        },
        {
          "documentation": {
            "contents": [
              "<p>Handle multiple methods of embedding an icon.\n&#39;ligature&#39; uses ligature style embedding like material-icons,\n&#39;className&#39; adds a class onto the element for libraries like glyphicons and ion icons,\n&#39;url&#39; will load a remote image, and\n&#39;component&#39; will render content as children like SVGs or any other React node.\n&#39;custom&#39; allows you to specify your own render prop.\nIf not set, &#39;auto&#39; will be used or the defaults set inside of RMWCProvider.</p>\n"
            ],
            "contentsRaw": "Handle multiple methods of embedding an icon.\n'ligature' uses ligature style embedding like material-icons,\n'className' adds a class onto the element for libraries like glyphicons and ion icons,\n'url' will load a remote image, and\n'component' will render content as children like SVGs or any other React node.\n'custom' allows you to specify your own render prop.\nIf not set, 'auto' will be used or the defaults set inside of RMWCProvider.",
            "metadata": {}
          },
          "fileName": "src/types/index.tsx",
          "flags": {
            "isExported": true,
            "isExternal": false,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "strategy",
          "type": "IconStrategyT"
        }
      ]
    },
    "ThemeOptionT": {
      "documentation": {
        "contents": [
          "<p>Theming</p>\n"
        ],
        "contentsRaw": "Theming",
        "metadata": {}
      },
      "fileName": "src/types/index.tsx",
      "flags": {
        "isExported": true,
        "isExternal": false,
        "isOptional": false,
        "isPrivate": false,
        "isProtected": false,
        "isPublic": false,
        "isRest": false,
        "isStatic": false
      },
      "kind": "type alias",
      "name": "ThemeOptionT",
      "type": "\"primary\" | \"secondary\" | \"background\" | \"surface\" | \"error\" | \"primaryBg\" | \"secondaryBg\" | \"onPrimary\" | \"onSecondary\" | \"onSurface\" | \"onError\" | \"textPrimaryOnBackground\" | \"textSecondaryOnBackground\" | \"textHintOnBackground\" | \"textDisabledOnBackground\" | \"textIconOnBackground\" | \"textPrimaryOnLight\" | \"textSecondaryOnLight\" | \"textHintOnLight\" | \"textDisabledOnLight\" | \"textIconOnLight\" | \"textPrimaryOnDark\" | \"textSecondaryOnDark\" | \"textHintOnDark\" | \"textDisabledOnDark\" | \"textIconOnDark\" | undefined"
    },
    "ThemePropT": {
      "fileName": "src/types/index.tsx",
      "flags": {
        "isExported": true,
        "isExternal": false,
        "isOptional": false,
        "isPrivate": false,
        "isProtected": false,
        "isPublic": false,
        "isRest": false,
        "isStatic": false
      },
      "kind": "type alias",
      "name": "ThemePropT",
      "type": "ThemeOptionT | ThemeOptionT[]"
    },
    "RipplePropT": {
      "documentation": {
        "contents": [
          "<p>Ripples</p>\n"
        ],
        "contentsRaw": "Ripples",
        "metadata": {}
      },
      "fileName": "src/types/index.tsx",
      "flags": {
        "isExported": true,
        "isExternal": false,
        "isOptional": false,
        "isPrivate": false,
        "isProtected": false,
        "isPublic": false,
        "isRest": false,
        "isStatic": false
      },
      "kind": "type alias",
      "name": "RipplePropT",
      "type": "boolean | "
    },
    "TagT": {
      "documentation": {
        "contents": [
          "<p>Components</p>\n"
        ],
        "contentsRaw": "Components",
        "metadata": {}
      },
      "fileName": "src/types/index.tsx",
      "flags": {
        "isExported": true,
        "isExternal": false,
        "isOptional": false,
        "isPrivate": false,
        "isProtected": false,
        "isPublic": false,
        "isRest": false,
        "isStatic": false
      },
      "kind": "type alias",
      "name": "TagT",
      "type": "string | React.ComponentType<any>"
    },
    "CustomEventT": {
      "fileName": "src/types/index.tsx",
      "flags": {
        "isExported": true,
        "isExternal": false,
        "isOptional": false,
        "isPrivate": false,
        "isProtected": false,
        "isPublic": false,
        "isRest": false,
        "isStatic": false
      },
      "kind": "type alias",
      "name": "CustomEventT",
      "type": "CustomEvent<T> & SyntheticEvent<EventTarget>"
    },
    "IconSizeT": {
      "fileName": "src/types/index.tsx",
      "flags": {
        "isExported": true,
        "isExternal": false,
        "isOptional": false,
        "isPrivate": false,
        "isProtected": false,
        "isPublic": false,
        "isRest": false,
        "isStatic": false
      },
      "kind": "type alias",
      "name": "IconSizeT",
      "type": "\"xsmall\" | \"small\" | \"medium\" | \"large\" | \"xlarge\""
    },
    "IconStrategyT": {
      "fileName": "src/types/index.tsx",
      "flags": {
        "isExported": true,
        "isExternal": false,
        "isOptional": false,
        "isPrivate": false,
        "isProtected": false,
        "isPublic": false,
        "isRest": false,
        "isStatic": false
      },
      "kind": "type alias",
      "name": "IconStrategyT",
      "type": "\"auto\" | \"ligature\" | \"className\" | \"url\" | \"component\" | \"custom\""
    },
    "IconPropT": {
      "fileName": "src/types/index.tsx",
      "flags": {
        "isExported": true,
        "isExternal": false,
        "isOptional": false,
        "isPrivate": false,
        "isProtected": false,
        "isPublic": false,
        "isRest": false,
        "isStatic": false
      },
      "kind": "type alias",
      "name": "IconPropT",
      "type": "IconElementT | IconOptions"
    },
    "HTMLProps": {
      "fileName": "src/types/index.tsx",
      "flags": {
        "isExported": true,
        "isExternal": false,
        "isOptional": false,
        "isPrivate": false,
        "isProtected": false,
        "isPublic": false,
        "isRest": false,
        "isStatic": false
      },
      "kind": "type alias",
      "name": "HTMLProps",
      "type": "A & ClassAttributes<T> & "
    },
    "ComponentProps": {
      "fileName": "src/types/index.tsx",
      "flags": {
        "isExported": true,
        "isExternal": false,
        "isOptional": false,
        "isPrivate": false,
        "isProtected": false,
        "isPublic": false,
        "isRest": false,
        "isStatic": false
      },
      "kind": "type alias",
      "name": "ComponentProps",
      "type": "Props & ElementProps | ComponentPropsWithRef<Tag> & "
    },
    "ComponentType": {
      "fileName": "src/types/index.tsx",
      "flags": {
        "isExported": true,
        "isExternal": false,
        "isOptional": false,
        "isPrivate": false,
        "isProtected": false,
        "isPublic": false,
        "isRest": false,
        "isStatic": false
      },
      "kind": "type alias",
      "name": "ComponentType",
      "type": "(props: ComponentProps<Props, ElementProps, Tag>, ref: any) => Element"
    }
  }
}
